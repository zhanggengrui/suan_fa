给定一个带有括号和字母的字符串，移除最少量的括号，从而使得这个字符串变为有效的字符串，并返回所有有效的字符串

例子：
输入:
"(a)(b))()"
输出：
"(a)(b)()" 和 "(a(b))()"

解答：
def removeInvalidParentheses(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        res = []
        flag = False
        mark = set()
        queue = [s]
        mark.add(s)
        while len(queue) != 0:
            for _ in range(len(queue)):
                cur = queue.pop(0)
                if self.is_valid(cur):
                    res.append(cur)
                    flag = True
                if flag == False:
                    for i in range(len(cur)):
                        if cur[i] in ["(",")"] and cur[:i]+cur[i+1:] not in mark:
                            queue.append(cur[:i]+cur[i+1:])
                            mark.add(cur[:i]+cur[i+1:])
            if flag:
                break
        return res

    def is_valid(self,s):
        cnt = 0
        for i in s:
            if i =="(":
                cnt+=1
            elif i==")":
                cnt-=1
            if cnt<0:
                return False
        return cnt == 0
